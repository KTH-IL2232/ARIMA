-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HDLAWGNGenerator\ConcatandExtract.vhd
-- Created: 2021-11-25 00:36:10
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ConcatandExtract
-- Source Path: HDLAWGNGenerator/AWGNGenerator/GaussianNoiseWithUnitVar/TausUniformRandGen/ConcatandExtract
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ConcatandExtract IS
  PORT( a                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        b                                 :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        u0_48_48                          :   OUT   std_logic_vector(47 DOWNTO 0);  -- ufix48_En48
        u1_16_16                          :   OUT   std_logic_vector(15 DOWNTO 0)  -- ufix16_En16
        );
END ConcatandExtract;


ARCHITECTURE rtl OF ConcatandExtract IS

  -- Signals
  SIGNAL b_unsigned                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL a_unsigned                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Shift_Arithmetic2_out1           : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion_out1        : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL u0_48_0                          : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL u0_48_48_tmp                     : unsigned(47 DOWNTO 0);  -- ufix48_En48
  SIGNAL bitMask_for_Bitwise_Operator     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bitwise_Operator_out1            : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion2_out1       : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL u0_16_16                         : unsigned(15 DOWNTO 0);  -- ufix16_En16

BEGIN
  b_unsigned <= unsigned(b);

  a_unsigned <= unsigned(a);

  Shift_Arithmetic2_out1 <= SHIFT_RIGHT(b_unsigned, 16);

  Data_Type_Conversion_out1 <= Shift_Arithmetic2_out1(15 DOWNTO 0);

  u0_48_0 <= a_unsigned & Data_Type_Conversion_out1;

  u0_48_48_tmp <= u0_48_0;

  u0_48_48 <= std_logic_vector(u0_48_48_tmp);

  bitMask_for_Bitwise_Operator <= to_unsigned(65535, 32);

  Bitwise_Operator_out1 <= b_unsigned AND bitMask_for_Bitwise_Operator;

  Data_Type_Conversion2_out1 <= Bitwise_Operator_out1(15 DOWNTO 0);

  u0_16_16 <= Data_Type_Conversion2_out1;

  u1_16_16 <= std_logic_vector(u0_16_16);

END rtl;

