-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HDLAWGNGenerator\SinCos.vhd
-- Created: 2021-11-25 00:36:10
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SinCos
-- Source Path: HDLAWGNGenerator/AWGNGenerator/GaussianNoiseWithUnitVar/SinCos
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SinCos IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        u1                                :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En16
        g0                                :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END SinCos;


ARCHITECTURE rtl OF SinCos IS

  -- Component Declarations
  COMPONENT Sine_HDL_Optimized2
    PORT( u                               :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16_En16
          x                               :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Sine_HDL_Optimized2
    USE ENTITY work.Sine_HDL_Optimized2(rtl);

  -- Signals
  SIGNAL u1_unsigned                      : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL Delay2_out1                      : unsigned(15 DOWNTO 0);  -- ufix16_En16
  SIGNAL g0_1                             : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL g0_signed                        : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay_out1                       : signed(15 DOWNTO 0);  -- sfix16_En15

BEGIN
  u_Sine_HDL_Optimized2 : Sine_HDL_Optimized2
    PORT MAP( u => std_logic_vector(Delay2_out1),  -- ufix16_En16
              x => g0_1  -- sfix16_En15
              );

  u1_unsigned <= unsigned(u1);

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= to_unsigned(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay2_out1 <= u1_unsigned;
    END IF;
  END PROCESS Delay2_process;


  g0_signed <= signed(g0_1);

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay_out1 <= g0_signed;
    END IF;
  END PROCESS Delay_process;


  g0 <= std_logic_vector(Delay_out1);

END rtl;

