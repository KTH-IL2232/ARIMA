-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HDLAWGNGenerator\FunctionEvaluation.vhd
-- Created: 2021-11-25 00:36:10
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FunctionEvaluation
-- Source Path: HDLAWGNGenerator/AWGNGenerator/GaussianNoiseWithUnitVar/SqrtImplementation/SqrtEval/FunctionEvaluation
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.AWGNGenerator_pkg.ALL;

ENTITY FunctionEvaluation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        x_f                               :   IN    std_logic_vector(30 DOWNTO 0);  -- ufix31_En24
        passIn                            :   IN    std_logic_vector(8 DOWNTO 0);  -- sfix9
        exp_fIn                           :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
        y_f                               :   OUT   std_logic_vector(16 DOWNTO 0);  -- ufix17_En13
        passOut                           :   OUT   std_logic_vector(8 DOWNTO 0);  -- sfix9
        exp_fOut                          :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
        );
END FunctionEvaluation;


ARCHITECTURE rtl OF FunctionEvaluation IS

  -- Constants
  CONSTANT alpha1_D_Lookup_Table2_data    : vector_of_signed13(0 TO 64) := 
    (to_signed(16#05A3#, 13), to_signed(16#0597#, 13), to_signed(16#058D#, 13), to_signed(16#0582#, 13),
     to_signed(16#0578#, 13), to_signed(16#056E#, 13), to_signed(16#0564#, 13), to_signed(16#055A#, 13),
     to_signed(16#0551#, 13), to_signed(16#0547#, 13), to_signed(16#053E#, 13), to_signed(16#0535#, 13),
     to_signed(16#052D#, 13), to_signed(16#0524#, 13), to_signed(16#051C#, 13), to_signed(16#0513#, 13),
     to_signed(16#050B#, 13), to_signed(16#0503#, 13), to_signed(16#04FB#, 13), to_signed(16#04F4#, 13),
     to_signed(16#04EC#, 13), to_signed(16#04E5#, 13), to_signed(16#04DE#, 13), to_signed(16#04D7#, 13),
     to_signed(16#04CF#, 13), to_signed(16#04C9#, 13), to_signed(16#04C2#, 13), to_signed(16#04BB#, 13),
     to_signed(16#04B5#, 13), to_signed(16#04AE#, 13), to_signed(16#04A8#, 13), to_signed(16#04A2#, 13),
     to_signed(16#049B#, 13), to_signed(16#0495#, 13), to_signed(16#048F#, 13), to_signed(16#0489#, 13),
     to_signed(16#0484#, 13), to_signed(16#047E#, 13), to_signed(16#0478#, 13), to_signed(16#0473#, 13),
     to_signed(16#046D#, 13), to_signed(16#0468#, 13), to_signed(16#0463#, 13), to_signed(16#045D#, 13),
     to_signed(16#0458#, 13), to_signed(16#0453#, 13), to_signed(16#044E#, 13), to_signed(16#0449#, 13),
     to_signed(16#0444#, 13), to_signed(16#043F#, 13), to_signed(16#043B#, 13), to_signed(16#0436#, 13),
     to_signed(16#0431#, 13), to_signed(16#042D#, 13), to_signed(16#0428#, 13), to_signed(16#0424#, 13),
     to_signed(16#041F#, 13), to_signed(16#041B#, 13), to_signed(16#0417#, 13), to_signed(16#0412#, 13),
     to_signed(16#040E#, 13), to_signed(16#040A#, 13), to_signed(16#0406#, 13), to_signed(16#0402#, 13),
     to_signed(16#0000#, 13));  -- sfix13 [65]
  CONSTANT alpha1_D_Lookup_Table3_data    : vector_of_signed21(0 TO 64) := 
    (to_signed(16#0B5B93#, 21), to_signed(16#0B7207#, 21), to_signed(16#0B884F#, 21), to_signed(16#0B9E6D#, 21),
     to_signed(16#0BB461#, 21), to_signed(16#0BCA2C#, 21), to_signed(16#0BDFCF#, 21), to_signed(16#0BF54B#, 21),
     to_signed(16#0C0AA0#, 21), to_signed(16#0C1FD0#, 21), to_signed(16#0C34DB#, 21), to_signed(16#0C49C2#, 21),
     to_signed(16#0C5E86#, 21), to_signed(16#0C7327#, 21), to_signed(16#0C87A6#, 21), to_signed(16#0C9C04#, 21),
     to_signed(16#0CB042#, 21), to_signed(16#0CC45F#, 21), to_signed(16#0CD85C#, 21), to_signed(16#0CEC3B#, 21),
     to_signed(16#0CFFFB#, 21), to_signed(16#0D139E#, 21), to_signed(16#0D2723#, 21), to_signed(16#0D3A8B#, 21),
     to_signed(16#0D4DD7#, 21), to_signed(16#0D6108#, 21), to_signed(16#0D741C#, 21), to_signed(16#0D8716#, 21),
     to_signed(16#0D99F6#, 21), to_signed(16#0DACBB#, 21), to_signed(16#0DBF67#, 21), to_signed(16#0DD1FA#, 21),
     to_signed(16#0DE473#, 21), to_signed(16#0DF6D5#, 21), to_signed(16#0E091E#, 21), to_signed(16#0E1B4F#, 21),
     to_signed(16#0E2D6A#, 21), to_signed(16#0E3F6D#, 21), to_signed(16#0E5159#, 21), to_signed(16#0E632F#, 21),
     to_signed(16#0E74F0#, 21), to_signed(16#0E869A#, 21), to_signed(16#0E982F#, 21), to_signed(16#0EA9AF#, 21),
     to_signed(16#0EBB1A#, 21), to_signed(16#0ECC71#, 21), to_signed(16#0EDDB4#, 21), to_signed(16#0EEEE2#, 21),
     to_signed(16#0EFFFD#, 21), to_signed(16#0F1104#, 21), to_signed(16#0F21F9#, 21), to_signed(16#0F32DA#, 21),
     to_signed(16#0F43A9#, 21), to_signed(16#0F5465#, 21), to_signed(16#0F650F#, 21), to_signed(16#0F75A7#, 21),
     to_signed(16#0F862E#, 21), to_signed(16#0F96A2#, 21), to_signed(16#0FA706#, 21), to_signed(16#0FB758#, 21),
     to_signed(16#0FC79A#, 21), to_signed(16#0FD7CB#, 21), to_signed(16#0FE7EB#, 21), to_signed(16#0FF7FB#, 21),
     to_signed(16#000000#, 21));  -- sfix21 [65]
  CONSTANT alpha1_D_Lookup_Table_data     : vector_of_signed13(0 TO 64) := 
    (to_signed(16#07F8#, 13), to_signed(16#07E8#, 13), to_signed(16#07D9#, 13), to_signed(16#07CA#, 13),
     to_signed(16#07BC#, 13), to_signed(16#07AD#, 13), to_signed(16#079F#, 13), to_signed(16#0792#, 13),
     to_signed(16#0784#, 13), to_signed(16#0777#, 13), to_signed(16#076A#, 13), to_signed(16#075E#, 13),
     to_signed(16#0751#, 13), to_signed(16#0745#, 13), to_signed(16#0739#, 13), to_signed(16#072E#, 13),
     to_signed(16#0722#, 13), to_signed(16#0717#, 13), to_signed(16#070C#, 13), to_signed(16#0701#, 13),
     to_signed(16#06F6#, 13), to_signed(16#06EC#, 13), to_signed(16#06E2#, 13), to_signed(16#06D8#, 13),
     to_signed(16#06CE#, 13), to_signed(16#06C4#, 13), to_signed(16#06BA#, 13), to_signed(16#06B1#, 13),
     to_signed(16#06A8#, 13), to_signed(16#069E#, 13), to_signed(16#0695#, 13), to_signed(16#068D#, 13),
     to_signed(16#0684#, 13), to_signed(16#067B#, 13), to_signed(16#0673#, 13), to_signed(16#066B#, 13),
     to_signed(16#0662#, 13), to_signed(16#065A#, 13), to_signed(16#0652#, 13), to_signed(16#064A#, 13),
     to_signed(16#0643#, 13), to_signed(16#063B#, 13), to_signed(16#0634#, 13), to_signed(16#062C#, 13),
     to_signed(16#0625#, 13), to_signed(16#061E#, 13), to_signed(16#0617#, 13), to_signed(16#0610#, 13),
     to_signed(16#0609#, 13), to_signed(16#0602#, 13), to_signed(16#05FB#, 13), to_signed(16#05F5#, 13),
     to_signed(16#05EE#, 13), to_signed(16#05E7#, 13), to_signed(16#05E1#, 13), to_signed(16#05DB#, 13),
     to_signed(16#05D5#, 13), to_signed(16#05CE#, 13), to_signed(16#05C8#, 13), to_signed(16#05C2#, 13),
     to_signed(16#05BC#, 13), to_signed(16#05B7#, 13), to_signed(16#05B1#, 13), to_signed(16#05AB#, 13),
     to_signed(16#0000#, 13));  -- sfix13 [65]
  CONSTANT alpha1_D_Lookup_Table1_data    : vector_of_signed21(0 TO 64) := 
    (to_signed(16#0807F7#, 21), to_signed(16#0817D8#, 21), to_signed(16#082799#, 21), to_signed(16#08373D#, 21),
     to_signed(16#0846C2#, 21), to_signed(16#08562B#, 21), to_signed(16#086578#, 21), to_signed(16#0874A9#, 21),
     to_signed(16#0883BF#, 21), to_signed(16#0892BA#, 21), to_signed(16#08A19B#, 21), to_signed(16#08B063#, 21),
     to_signed(16#08BF12#, 21), to_signed(16#08CDA8#, 21), to_signed(16#08DC27#, 21), to_signed(16#08EA8D#, 21),
     to_signed(16#08F8DD#, 21), to_signed(16#090716#, 21), to_signed(16#091539#, 21), to_signed(16#092346#, 21),
     to_signed(16#09313D#, 21), to_signed(16#093F1F#, 21), to_signed(16#094CED#, 21), to_signed(16#095AA6#, 21),
     to_signed(16#09684B#, 21), to_signed(16#0975DD#, 21), to_signed(16#09835B#, 21), to_signed(16#0990C6#, 21),
     to_signed(16#099E1E#, 21), to_signed(16#09AB64#, 21), to_signed(16#09B898#, 21), to_signed(16#09C5BA#, 21),
     to_signed(16#09D2CA#, 21), to_signed(16#09DFC9#, 21), to_signed(16#09ECB8#, 21), to_signed(16#09F995#, 21),
     to_signed(16#0A0662#, 21), to_signed(16#0A131E#, 21), to_signed(16#0A1FCB#, 21), to_signed(16#0A2C68#, 21),
     to_signed(16#0A38F5#, 21), to_signed(16#0A4573#, 21), to_signed(16#0A51E2#, 21), to_signed(16#0A5E41#, 21),
     to_signed(16#0A6A93#, 21), to_signed(16#0A76D5#, 21), to_signed(16#0A830A#, 21), to_signed(16#0A8F30#, 21),
     to_signed(16#0A9B48#, 21), to_signed(16#0AA753#, 21), to_signed(16#0AB350#, 21), to_signed(16#0ABF3F#, 21),
     to_signed(16#0ACB22#, 21), to_signed(16#0AD6F7#, 21), to_signed(16#0AE2C0#, 21), to_signed(16#0AEE7C#, 21),
     to_signed(16#0AFA2B#, 21), to_signed(16#0B05CE#, 21), to_signed(16#0B1165#, 21), to_signed(16#0B1CEF#, 21),
     to_signed(16#0B286E#, 21), to_signed(16#0B33E1#, 21), to_signed(16#0B3F48#, 21), to_signed(16#0B4AA4#, 21),
     to_signed(16#000000#, 21));  -- sfix21 [65]

  -- Signals
  SIGNAL passIn_signed                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Delay3_out1                      : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL x_f_unsigned                     : unsigned(30 DOWNTO 0);  -- ufix31_En24
  SIGNAL Constant1_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Subtract1_sub_cast               : unsigned(30 DOWNTO 0);  -- ufix31_En24
  SIGNAL Subtract1_out1                   : unsigned(30 DOWNTO 0);  -- ufix31_En24
  SIGNAL x_e                              : unsigned(30 DOWNTO 0);  -- ufix31_En19
  SIGNAL u016                             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL u016_dtc                         : signed(7 DOWNTO 0);  -- int8
  SIGNAL Constant2_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant2_out1_dtc               : signed(7 DOWNTO 0);  -- int8
  SIGNAL Switch2_out1                     : signed(7 DOWNTO 0);  -- int8
  SIGNAL Delay4_out1                      : unsigned(30 DOWNTO 0);  -- ufix31_En24
  SIGNAL Delay5_out1                      : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_D_Lookup_Table2_k         : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL c1                               : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL Product1_cast                    : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Product1_mul_temp                : signed(44 DOWNTO 0);  -- sfix45_En36
  SIGNAL Product1_out1                    : signed(43 DOWNTO 0);  -- sfix44_En36
  SIGNAL Delay6_out1                      : signed(7 DOWNTO 0);  -- int8
  SIGNAL alpha1_D_Lookup_Table3_k         : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL c0                               : signed(20 DOWNTO 0);  -- sfix21_En20
  SIGNAL Add1_add_cast                    : unsigned(16 DOWNTO 0);  -- ufix17_En13
  SIGNAL Add1_add_cast_1                  : unsigned(16 DOWNTO 0);  -- ufix17_En13
  SIGNAL Add1_out1                        : unsigned(16 DOWNTO 0);  -- ufix17_En13
  SIGNAL Constant_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Subtract_sub_cast                : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL Subtract_sub_cast_1              : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL Subtract_out1                    : signed(32 DOWNTO 0);  -- sfix33_En24
  SIGNAL x_e_1                            : signed(32 DOWNTO 0);  -- sfix33_En18
  SIGNAL u016_1                           : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Switch1_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay_out1                       : unsigned(30 DOWNTO 0);  -- ufix31_En24
  SIGNAL Delay1_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL alpha1_D_Lookup_Table_k          : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL c1_1                             : signed(12 DOWNTO 0);  -- sfix13_En12
  SIGNAL Product_cast                     : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL Product_mul_temp                 : signed(44 DOWNTO 0);  -- sfix45_En36
  SIGNAL Product_out1                     : signed(43 DOWNTO 0);  -- sfix44_En36
  SIGNAL Delay2_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL alpha1_D_Lookup_Table1_k         : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL c0_1                             : signed(20 DOWNTO 0);  -- sfix21_En20
  SIGNAL Add_add_cast                     : signed(43 DOWNTO 0);  -- sfix44_En36
  SIGNAL Add_add_temp                     : signed(43 DOWNTO 0);  -- sfix44_En36
  SIGNAL Add_out1                         : unsigned(16 DOWNTO 0);  -- ufix17_En13
  SIGNAL Switch_out1                      : unsigned(16 DOWNTO 0);  -- ufix17_En13
  SIGNAL exp_fIn_signed                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Delay7_out1                      : signed(7 DOWNTO 0);  -- int8

BEGIN
  passIn_signed <= signed(passIn);

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= to_signed(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay3_out1 <= passIn_signed;
    END IF;
  END PROCESS Delay3_process;


  x_f_unsigned <= unsigned(x_f);

  Constant1_out1 <= to_unsigned(16#02#, 8);

  Subtract1_sub_cast <= Constant1_out1(6 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Subtract1_out1 <= x_f_unsigned - Subtract1_sub_cast;

  x_e <= Subtract1_out1;

  u016 <= x_e(26 DOWNTO 19);

  
  switch_compare_1 <= '1' WHEN u016 > to_unsigned(16#3F#, 8) ELSE
      '0';

  u016_dtc <= signed(u016);

  Constant2_out1 <= to_unsigned(16#40#, 8);

  Constant2_out1_dtc <= signed(Constant2_out1);

  
  Switch2_out1 <= u016_dtc WHEN switch_compare_1 = '0' ELSE
      Constant2_out1_dtc;

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_out1 <= to_unsigned(16#00000000#, 31);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay4_out1 <= x_f_unsigned;
    END IF;
  END PROCESS Delay4_process;


  Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay5_out1 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay5_out1 <= Switch2_out1;
    END IF;
  END PROCESS Delay5_process;


  
  alpha1_D_Lookup_Table2_k <= to_unsigned(16#00#, 7) WHEN Delay5_out1 <= to_signed(16#00#, 8) ELSE
      to_unsigned(16#40#, 7) WHEN Delay5_out1 >= to_signed(16#40#, 8) ELSE
      unsigned(Delay5_out1(6 DOWNTO 0));
  c1 <= alpha1_D_Lookup_Table2_data(to_integer(alpha1_D_Lookup_Table2_k));

  Product1_cast <= signed(resize(Delay4_out1, 32));
  Product1_mul_temp <= Product1_cast * c1;
  Product1_out1 <= Product1_mul_temp(43 DOWNTO 0);

  Delay6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay6_out1 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay6_out1 <= Switch2_out1;
    END IF;
  END PROCESS Delay6_process;


  
  alpha1_D_Lookup_Table3_k <= to_unsigned(16#00#, 7) WHEN Delay6_out1 <= to_signed(16#00#, 8) ELSE
      to_unsigned(16#40#, 7) WHEN Delay6_out1 >= to_signed(16#40#, 8) ELSE
      unsigned(Delay6_out1(6 DOWNTO 0));
  c0 <= alpha1_D_Lookup_Table3_data(to_integer(alpha1_D_Lookup_Table3_k));

  Add1_add_cast <= unsigned(Product1_out1(39 DOWNTO 23));
  Add1_add_cast_1 <= unsigned(resize(c0(20 DOWNTO 7), 17));
  Add1_out1 <= Add1_add_cast + Add1_add_cast_1;

  Constant_out1 <= to_unsigned(16#01#, 8);

  Subtract_sub_cast <= signed(resize(x_f_unsigned, 33));
  Subtract_sub_cast_1 <= signed(resize(Constant_out1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 33));
  Subtract_out1 <= Subtract_sub_cast - Subtract_sub_cast_1;

  x_e_1 <= Subtract_out1;

  u016_1 <= unsigned(x_e_1(25 DOWNTO 18));

  
  switch_compare_1_1 <= '1' WHEN u016_1 > to_unsigned(16#3F#, 8) ELSE
      '0';

  
  Switch1_out1 <= u016_1 WHEN switch_compare_1_1 = '0' ELSE
      Constant2_out1;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= to_unsigned(16#00000000#, 31);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay_out1 <= x_f_unsigned;
    END IF;
  END PROCESS Delay_process;


  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay1_out1 <= Switch1_out1;
    END IF;
  END PROCESS Delay1_process;


  
  alpha1_D_Lookup_Table_k <= to_unsigned(16#00#, 7) WHEN Delay1_out1 = to_unsigned(16#00#, 8) ELSE
      to_unsigned(16#40#, 7) WHEN Delay1_out1 >= to_unsigned(16#40#, 8) ELSE
      Delay1_out1(6 DOWNTO 0);
  c1_1 <= alpha1_D_Lookup_Table_data(to_integer(alpha1_D_Lookup_Table_k));

  Product_cast <= signed(resize(Delay_out1, 32));
  Product_mul_temp <= Product_cast * c1_1;
  Product_out1 <= Product_mul_temp(43 DOWNTO 0);

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay2_out1 <= Switch1_out1;
    END IF;
  END PROCESS Delay2_process;


  
  alpha1_D_Lookup_Table1_k <= to_unsigned(16#00#, 7) WHEN Delay2_out1 = to_unsigned(16#00#, 8) ELSE
      to_unsigned(16#40#, 7) WHEN Delay2_out1 >= to_unsigned(16#40#, 8) ELSE
      Delay2_out1(6 DOWNTO 0);
  c0_1 <= alpha1_D_Lookup_Table1_data(to_integer(alpha1_D_Lookup_Table1_k));

  Add_add_cast <= resize(c0_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
  Add_add_temp <= Product_out1 + Add_add_cast;
  Add_out1 <= unsigned(Add_add_temp(39 DOWNTO 23));

  
  Switch_out1 <= Add1_out1 WHEN Delay3_out1 = to_signed(16#000#, 9) ELSE
      Add_out1;

  y_f <= std_logic_vector(Switch_out1);

  passOut <= std_logic_vector(Delay3_out1);

  exp_fIn_signed <= signed(exp_fIn);

  Delay7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay7_out1 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      Delay7_out1 <= exp_fIn_signed;
    END IF;
  END PROCESS Delay7_process;


  exp_fOut <= std_logic_vector(Delay7_out1);

END rtl;

