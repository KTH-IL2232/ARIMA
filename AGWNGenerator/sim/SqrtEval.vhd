-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HDLAWGNGenerator\SqrtEval.vhd
-- Created: 2021-11-25 00:36:10
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SqrtEval
-- Source Path: HDLAWGNGenerator/AWGNGenerator/GaussianNoiseWithUnitVar/SqrtImplementation/SqrtEval
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SqrtEval IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        u                                 :   IN    std_logic_vector(30 DOWNTO 0);  -- ufix31_En24
        f                                 :   OUT   std_logic_vector(16 DOWNTO 0)  -- ufix17_En13
        );
END SqrtEval;


ARCHITECTURE rtl OF SqrtEval IS

  -- Component Declarations
  COMPONENT RangeReduction
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          u                               :   IN    std_logic_vector(30 DOWNTO 0);  -- ufix31_En24
          x_f                             :   OUT   std_logic_vector(30 DOWNTO 0);  -- ufix31_En24
          pass                            :   OUT   std_logic_vector(8 DOWNTO 0);  -- sfix9
          exp_f                           :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT FunctionEvaluation
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          x_f                             :   IN    std_logic_vector(30 DOWNTO 0);  -- ufix31_En24
          passIn                          :   IN    std_logic_vector(8 DOWNTO 0);  -- sfix9
          exp_fIn                         :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          y_f                             :   OUT   std_logic_vector(16 DOWNTO 0);  -- ufix17_En13
          passOut                         :   OUT   std_logic_vector(8 DOWNTO 0);  -- sfix9
          exp_fOut                        :   OUT   std_logic_vector(7 DOWNTO 0)  -- int8
          );
  END COMPONENT;

  COMPONENT RangeReconstruction
    PORT( y_f                             :   IN    std_logic_vector(16 DOWNTO 0);  -- ufix17_En13
          pass                            :   IN    std_logic_vector(8 DOWNTO 0);  -- sfix9
          exp_f                           :   IN    std_logic_vector(7 DOWNTO 0);  -- int8
          f                               :   OUT   std_logic_vector(16 DOWNTO 0)  -- ufix17_En13
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : RangeReduction
    USE ENTITY work.RangeReduction(rtl);

  FOR ALL : FunctionEvaluation
    USE ENTITY work.FunctionEvaluation(rtl);

  FOR ALL : RangeReconstruction
    USE ENTITY work.RangeReconstruction(rtl);

  -- Signals
  SIGNAL RangeReduction_out1              : std_logic_vector(30 DOWNTO 0);  -- ufix31
  SIGNAL RangeReduction_out2              : std_logic_vector(8 DOWNTO 0);  -- ufix9
  SIGNAL RangeReduction_out3              : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL FunctionEvaluation_out1          : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL FunctionEvaluation_out2          : std_logic_vector(8 DOWNTO 0);  -- ufix9
  SIGNAL FunctionEvaluation_out3          : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL RangeReconstruction_out1         : std_logic_vector(16 DOWNTO 0);  -- ufix17

BEGIN
  u_RangeReduction : RangeReduction
    PORT MAP( clk => clk,
              reset => reset,
              u => u,  -- ufix31_En24
              x_f => RangeReduction_out1,  -- ufix31_En24
              pass => RangeReduction_out2,  -- sfix9
              exp_f => RangeReduction_out3  -- int8
              );

  u_FunctionEvaluation : FunctionEvaluation
    PORT MAP( clk => clk,
              reset => reset,
              x_f => RangeReduction_out1,  -- ufix31_En24
              passIn => RangeReduction_out2,  -- sfix9
              exp_fIn => RangeReduction_out3,  -- int8
              y_f => FunctionEvaluation_out1,  -- ufix17_En13
              passOut => FunctionEvaluation_out2,  -- sfix9
              exp_fOut => FunctionEvaluation_out3  -- int8
              );

  u_RangeReconstruction : RangeReconstruction
    PORT MAP( y_f => FunctionEvaluation_out1,  -- ufix17_En13
              pass => FunctionEvaluation_out2,  -- sfix9
              exp_f => FunctionEvaluation_out3,  -- int8
              f => RangeReconstruction_out1  -- ufix17_En13
              );

  f <= RangeReconstruction_out1;

END rtl;

